Given the root of a binary tree, return its maximum depth.
A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
      3
     / \
    9   20
       /  \
      15   7
depth/height = 3

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: 3

Example 2:
Input: root = [1,null,2]
Output: 2

APPROACH:
             h=3
            3 lh=1,rh=2
           /  \ h=2
lh=0,rh=0 9   20  lh=1,rh=1
             /  \ h=1
(lh=0,rh=0)15    7 (lh=0,rh=0)
         
    
CODE:
 int maxDepth(TreeNode* root) {
      if(root==NULL)
          return 0;
      int leftheight=maxDepth(root->left);
      int rightheight=maxDepth(root->right);
       return 1+max(leftheight,rightheight);
    }
